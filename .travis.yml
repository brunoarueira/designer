language: rust
branches:
  only:
    - master
dist: bionic # tarpaulin requires this distro
addons:
  apt:
    packages:
      - libssl-dev
cache: cargo
rust:
  - stable
  - nightly

matrix:
  allow_failures:
    - rust: nightly

before_script: |
  rustup component add clippy
  cargo install cargo-audit

  if [[ "$TRAVIS_RUST_VERSION" == stable ]]; then
    cargo install cargo-tarpaulin
  fi

script:
  - cargo clippy
  - cargo audit
  - cargo clean
  - cargo build
  - cargo test

after_success: |
  if [[ "$TRAVIS_RUST_VERSION" == stable ]]; then
    cargo tarpaulin --out Xml
    bash <(curl -s https://codecov.io/bash)
  fi

before_cache:
# Delete loose files in the debug directory
- find ./target/debug -maxdepth 1 -type f -delete
# Delete the test and benchmark executables. Finding these all might take some
# experimentation.
- rm -rf ./target/debug/deps/bench*
# Delete the associated metadata files for those executables
- rm -rf ./target/debug/.fingerprint/bench*
# Note that all of the above need to be repeated for `release/` instead of
# `debug/` if your build script builds artifacts in release mode.
# This is just more metadata
- rm -f  ./target/.rustc_info.json
# Also delete the saved benchmark data from the test benchmarks. If you
# have Criterion.rs benchmarks, you'll probably want to do this as well, or set
# the CRITERION_HOME environment variable to move that data out of the
# `target/` directory.
- rm -rf ./target/criterion
# Also delete cargo's registry index. This is updated on every build, but it's
# way cheaper to re-download than the whole cache is.
- rm -rf ~/.cargo/registry/index/
# Removes tarpaulin folder to not cache
- rm -rf ./target/tarpaulin
